{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/data/rooms.ts"],"sourcesContent":["import { Room } from \"@/types/hotel\";\n\n// Precios base por tipo de habitación\nexport const ROOM_PRICES = {\n  sencilla: {\n    withAC: 800,\n    withFan: 600\n  },\n  doble: {\n    withAC: 1200,\n    withFan: 900\n  },\n  triple: {\n    withAC: 1500,\n    withFan: 1200\n  }\n};\n\n// Números específicos de habitaciones según la configuración real\nconst ROOM_NUMBERS = {\n  sencilla: {\n    withFan: [3, 5, 6, 7, 8, 9, 10, 11, 12, 15, 107, 110, 210, 211, 302, 306, 307, 308, 309, 310, 311, 312, 313, 314, 316, 319, 320, 321, 323, 324, 330], // 31 habitaciones\n    withAC: [13, 14, 106, 114, 203, 205] // 6 habitaciones\n  },\n  doble: {\n    withFan: [108, 208, 303, 304, 305, 315, 317, 318, 322, 328, 329], // 11 habitaciones\n    withAC: [101, 105, 109, 112, 113, 207, 212, 213, 214] // 9 habitaciones\n  },\n  triple: {\n    withFan: [301], // 1 habitación\n    withAC: [102, 103, 104, 111, 202, 204, 206, 325, 326, 327] // 10 habitaciones\n  }\n};\n\n// Función para generar las habitaciones iniciales\nexport function generateInitialRooms(): Room[] {\n  const rooms: Room[] = [];\n\n  // Habitaciones sencillas con ventilador\n  ROOM_NUMBERS.sencilla.withFan.forEach(roomNumber => {\n    rooms.push({\n      id: `S${roomNumber}`,\n      number: roomNumber,\n      type: \"sencilla\",\n      hasAC: false,\n      occupied: false,\n      price: ROOM_PRICES.sencilla.withFan\n    });\n  });\n\n  // Habitaciones sencillas con AC\n  ROOM_NUMBERS.sencilla.withAC.forEach(roomNumber => {\n    rooms.push({\n      id: `S${roomNumber}`,\n      number: roomNumber,\n      type: \"sencilla\",\n      hasAC: true,\n      occupied: false,\n      price: ROOM_PRICES.sencilla.withAC\n    });\n  });\n\n  // Habitaciones dobles con ventilador\n  ROOM_NUMBERS.doble.withFan.forEach(roomNumber => {\n    rooms.push({\n      id: `D${roomNumber}`,\n      number: roomNumber,\n      type: \"doble\",\n      hasAC: false,\n      occupied: false,\n      price: ROOM_PRICES.doble.withFan\n    });\n  });\n\n  // Habitaciones dobles con AC\n  ROOM_NUMBERS.doble.withAC.forEach(roomNumber => {\n    rooms.push({\n      id: `D${roomNumber}`,\n      number: roomNumber,\n      type: \"doble\",\n      hasAC: true,\n      occupied: false,\n      price: ROOM_PRICES.doble.withAC\n    });\n  });\n\n  // Habitaciones triples con ventilador\n  ROOM_NUMBERS.triple.withFan.forEach(roomNumber => {\n    rooms.push({\n      id: `T${roomNumber}`,\n      number: roomNumber,\n      type: \"triple\",\n      hasAC: false,\n      occupied: false,\n      price: ROOM_PRICES.triple.withFan\n    });\n  });\n\n  // Habitaciones triples con AC\n  ROOM_NUMBERS.triple.withAC.forEach(roomNumber => {\n    rooms.push({\n      id: `T${roomNumber}`,\n      number: roomNumber,\n      type: \"triple\",\n      hasAC: true,\n      occupied: false,\n      price: ROOM_PRICES.triple.withAC\n    });\n  });\n\n  return rooms;\n}\n\nexport const initialRooms = generateInitialRooms();\n"],"names":[],"mappings":";;;;;AAGO,MAAM,cAAc;IACzB,UAAU;QACR,QAAQ;QACR,SAAS;IACX;IACA,OAAO;QACL,QAAQ;QACR,SAAS;IACX;IACA,QAAQ;QACN,QAAQ;QACR,SAAS;IACX;AACF;AAEA,kEAAkE;AAClE,MAAM,eAAe;IACnB,UAAU;QACR,SAAS;YAAC;YAAG;YAAG;YAAG;YAAG;YAAG;YAAG;YAAI;YAAI;YAAI;YAAI;YAAK;YAAK;YAAK;YAAK;YAAK;YAAK;YAAK;YAAK;YAAK;YAAK;YAAK;YAAK;YAAK;YAAK;YAAK;YAAK;YAAK;YAAK;YAAK;YAAK;SAAI;QACpJ,QAAQ;YAAC;YAAI;YAAI;YAAK;YAAK;YAAK;SAAI,CAAC,iBAAiB;IACxD;IACA,OAAO;QACL,SAAS;YAAC;YAAK;YAAK;YAAK;YAAK;YAAK;YAAK;YAAK;YAAK;YAAK;YAAK;SAAI;QAChE,QAAQ;YAAC;YAAK;YAAK;YAAK;YAAK;YAAK;YAAK;YAAK;YAAK;SAAI,CAAC,iBAAiB;IACzE;IACA,QAAQ;QACN,SAAS;YAAC;SAAI;QACd,QAAQ;YAAC;YAAK;YAAK;YAAK;YAAK;YAAK;YAAK;YAAK;YAAK;YAAK;SAAI,CAAC,kBAAkB;IAC/E;AACF;AAGO,SAAS;IACd,MAAM,QAAgB,EAAE;IAExB,wCAAwC;IACxC,aAAa,QAAQ,CAAC,OAAO,CAAC,OAAO,CAAC,CAAA;QACpC,MAAM,IAAI,CAAC;YACT,IAAI,CAAC,CAAC,EAAE,YAAY;YACpB,QAAQ;YACR,MAAM;YACN,OAAO;YACP,UAAU;YACV,OAAO,YAAY,QAAQ,CAAC,OAAO;QACrC;IACF;IAEA,gCAAgC;IAChC,aAAa,QAAQ,CAAC,MAAM,CAAC,OAAO,CAAC,CAAA;QACnC,MAAM,IAAI,CAAC;YACT,IAAI,CAAC,CAAC,EAAE,YAAY;YACpB,QAAQ;YACR,MAAM;YACN,OAAO;YACP,UAAU;YACV,OAAO,YAAY,QAAQ,CAAC,MAAM;QACpC;IACF;IAEA,qCAAqC;IACrC,aAAa,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,CAAA;QACjC,MAAM,IAAI,CAAC;YACT,IAAI,CAAC,CAAC,EAAE,YAAY;YACpB,QAAQ;YACR,MAAM;YACN,OAAO;YACP,UAAU;YACV,OAAO,YAAY,KAAK,CAAC,OAAO;QAClC;IACF;IAEA,6BAA6B;IAC7B,aAAa,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,CAAA;QAChC,MAAM,IAAI,CAAC;YACT,IAAI,CAAC,CAAC,EAAE,YAAY;YACpB,QAAQ;YACR,MAAM;YACN,OAAO;YACP,UAAU;YACV,OAAO,YAAY,KAAK,CAAC,MAAM;QACjC;IACF;IAEA,sCAAsC;IACtC,aAAa,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,CAAA;QAClC,MAAM,IAAI,CAAC;YACT,IAAI,CAAC,CAAC,EAAE,YAAY;YACpB,QAAQ;YACR,MAAM;YACN,OAAO;YACP,UAAU;YACV,OAAO,YAAY,MAAM,CAAC,OAAO;QACnC;IACF;IAEA,8BAA8B;IAC9B,aAAa,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,CAAA;QACjC,MAAM,IAAI,CAAC;YACT,IAAI,CAAC,CAAC,EAAE,YAAY;YACpB,QAAQ;YACR,MAAM;YACN,OAAO;YACP,UAAU;YACV,OAAO,YAAY,MAAM,CAAC,MAAM;QAClC;IACF;IAEA,OAAO;AACT;AAEO,MAAM,eAAe","debugId":null}},
    {"offset": {"line": 195, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/context/HotelContext.tsx"],"sourcesContent":["\"use client\";\n\nimport React, { createContext, useContext, useReducer, ReactNode } from 'react';\nimport { Room, Reservation, Guest, RoomFilter } from '@/types/hotel';\nimport { initialRooms } from '@/data/rooms';\n\ninterface HotelState {\n  rooms: Room[];\n  reservations: Reservation[];\n}\n\ntype HotelAction =\n  | { type: 'ADD_RESERVATION'; payload: Reservation }\n  | { type: 'CANCEL_RESERVATION'; payload: string }\n  | { type: 'UPDATE_ROOM'; payload: { roomId: string; updates: Partial<Room> } }\n  | { type: 'RESET_DATA' };\n\ninterface HotelContextType {\n  state: HotelState;\n  addReservation: (guest: Omit<Guest, 'id'>, roomFilter: RoomFilter) => Promise<Reservation>;\n  cancelReservation: (reservationId: string) => void;\n  getAvailableRooms: (filter?: Partial<RoomFilter>) => Room[];\n  getRoomStats: () => {\n    total: number;\n    occupied: number;\n    available: number;\n    byType: Record<string, { total: number; occupied: number; available: number }>;\n  };\n}\n\nconst HotelContext = createContext<HotelContextType | undefined>(undefined);\n\nfunction hotelReducer(state: HotelState, action: HotelAction): HotelState {\n  switch (action.type) {\n    case 'ADD_RESERVATION':\n      const reservation = action.payload;\n      return {\n        ...state,\n        reservations: [...state.reservations, reservation],\n        rooms: state.rooms.map(room =>\n          room.id === reservation.room.id\n            ? { ...room, occupied: true }\n            : room\n        )\n      };\n\n    case 'CANCEL_RESERVATION':\n      const reservationToCancel = state.reservations.find(r => r.id === action.payload);\n      if (!reservationToCancel) return state;\n\n      return {\n        ...state,\n        reservations: state.reservations.filter(r => r.id !== action.payload),\n        rooms: state.rooms.map(room =>\n          room.id === reservationToCancel.room.id\n            ? { ...room, occupied: false }\n            : room\n        )\n      };\n\n    case 'UPDATE_ROOM':\n      return {\n        ...state,\n        rooms: state.rooms.map(room =>\n          room.id === action.payload.roomId\n            ? { ...room, ...action.payload.updates }\n            : room\n        )\n      };\n\n    case 'RESET_DATA':\n      return {\n        rooms: initialRooms,\n        reservations: []\n      };\n\n    default:\n      return state;\n  }\n}\n\nexport function HotelProvider({ children }: { children: ReactNode }) {\n  const [state, dispatch] = useReducer(hotelReducer, {\n    rooms: initialRooms,\n    reservations: []\n  });\n\n  const addReservation = async (\n    guestData: Omit<Guest, 'id'>,\n    roomFilter: RoomFilter\n  ): Promise<Reservation> => {\n    // Buscar habitación disponible que cumpla con los criterios\n    const availableRoom = state.rooms.find(room =>\n      !room.occupied &&\n      room.type === roomFilter.type &&\n      room.hasAC === roomFilter.hasAC\n    );\n\n    if (!availableRoom) {\n      throw new Error(`No hay habitaciones ${roomFilter.type} ${roomFilter.hasAC ? 'con aire acondicionado' : 'con ventilador'} disponibles`);\n    }\n\n    // Crear guest con ID único\n    const guest: Guest = {\n      ...guestData,\n      id: `guest_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`\n    };\n\n    // Crear reservación\n    const reservation: Reservation = {\n      id: `res_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`,\n      guest,\n      room: availableRoom,\n      status: 'active',\n      createdAt: new Date()\n    };\n\n    dispatch({ type: 'ADD_RESERVATION', payload: reservation });\n    return reservation;\n  };\n\n  const cancelReservation = (reservationId: string) => {\n    dispatch({ type: 'CANCEL_RESERVATION', payload: reservationId });\n  };\n\n  const getAvailableRooms = (filter?: Partial<RoomFilter>): Room[] => {\n    return state.rooms.filter(room => {\n      if (room.occupied) return false;\n      if (filter?.type && room.type !== filter.type) return false;\n      if (filter?.hasAC !== undefined && room.hasAC !== filter.hasAC) return false;\n      return true;\n    });\n  };\n\n  const getRoomStats = () => {\n    const total = state.rooms.length;\n    const occupied = state.rooms.filter(room => room.occupied).length;\n    const available = total - occupied;\n\n    const byType = state.rooms.reduce((acc, room) => {\n      if (!acc[room.type]) {\n        acc[room.type] = { total: 0, occupied: 0, available: 0 };\n      }\n      acc[room.type].total++;\n      if (room.occupied) {\n        acc[room.type].occupied++;\n      } else {\n        acc[room.type].available++;\n      }\n      return acc;\n    }, {} as Record<string, { total: number; occupied: number; available: number }>);\n\n    return { total, occupied, available, byType };\n  };\n\n  return (\n    <HotelContext.Provider\n      value={{\n        state,\n        addReservation,\n        cancelReservation,\n        getAvailableRooms,\n        getRoomStats\n      }}\n    >\n      {children}\n    </HotelContext.Provider>\n  );\n}\n\nexport function useHotel() {\n  const context = useContext(HotelContext);\n  if (context === undefined) {\n    throw new Error('useHotel must be used within a HotelProvider');\n  }\n  return context;\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}